// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc157.ProtoBot2017.subsystems;

import org.usfirst.frc157.ProtoBot2017.RobotMap;  
import org.usfirst.frc157.ProtoBot2017.commands.*;
import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Sendable;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.DigitalInput;


/**
 *
 */
public class GearBridge extends Subsystem {

    private final double OPEN_SPEED  = 0.40;
    private final double CLOSE_SPEED = 0.15;
    private final CANTalon GearBridgeMotorLeft = RobotMap.GearBridgeMotorLeft;
    private final CANTalon GearBridgeMotorRght = RobotMap.GearBridgeMotorRght;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    // Limit Switches
    protected DigitalInput openLimitSwitchLeft;
    protected DigitalInput closeLimitSwitchLeft;
    protected DigitalInput openLimitSwitchRight;
    protected DigitalInput closeLimitSwitchRight;

    public enum GearBridgeCommand
    {
        OPEN,
        CLOSE,
        IDLE
    }
        
    public GearBridge()
    {
        System.out.println("Gear: Gear()");
        openLimitSwitchLeft = new DigitalInput(0); 
        closeLimitSwitchLeft = new DigitalInput(1); 
        openLimitSwitchRight = new DigitalInput(2);
        closeLimitSwitchRight = new DigitalInput(3);
        
        GearBridgeMotorLeft.changeControlMode(CANTalon.TalonControlMode.PercentVbus);
        GearBridgeMotorRght.changeControlMode(CANTalon.TalonControlMode.PercentVbus);

    }        
   
    
    public boolean isClosed()
    {
        //int test = 1 / 0;
        boolean testLeft;
        boolean testRight;
        boolean answer;
       // System.out.println("Gear: isClosed()");
        testLeft = closeLimitSwitchLeft.get();
        testRight = closeLimitSwitchRight.get();
      
        if (testLeft == true && testRight == true )
        {
           answer = true;
        //   System.out.println("is closed: true");
        }
        else
        {
            answer = false;
      //      System.out.println("is closed: false");
        }
        return answer;
    }

    public boolean isOpen() 
    {
        boolean testLeft;
        boolean testRight;
        boolean answer;
     //   System.out.println("Gear: isopen()");
        testLeft = openLimitSwitchLeft.get();
        testRight = openLimitSwitchRight.get();
      
        if (testLeft == true && testRight == true )
        {
           answer = true;
          // System.out.println("is open: true");
        }
        else
        {
            answer = false;
            //System.out.println("is open: false");
        }
        return answer;
    }
    
    public void close()
    {
        boolean testLeft;
        boolean testRight;
        boolean answer;
        testLeft = closeLimitSwitchLeft.get();
        
         if (testLeft == true)
         {
             GearBridgeMotorLeft.set(0.0);         
         }
         else
         {
             GearBridgeMotorLeft.set(-CLOSE_SPEED);
         }
         
     
         testRight = closeLimitSwitchRight.get();
         
         if (testRight == true)
         {
             GearBridgeMotorRght.set(0.0);         
         }
         else
         {
             GearBridgeMotorRght.set(-CLOSE_SPEED);
         }
     
     }
    
    
    public void open()
    {
       boolean testLeft;
       boolean testRight;
       boolean answer;
       testLeft = openLimitSwitchLeft.get();

        if (testLeft == true)
        {
            GearBridgeMotorLeft.set(0.0);         
        }
        else
        {
            GearBridgeMotorLeft.set(OPEN_SPEED);
        }
        
    
        testRight = openLimitSwitchRight.get();
    
        if (testRight == true)
        {
            GearBridgeMotorRght.set(0.0);         
        }
        else
        {
            GearBridgeMotorRght.set(OPEN_SPEED);
        }
    
    }
    
    public void idle()
    {
        GearBridgeMotorLeft.set(0.0);   
        GearBridgeMotorRght.set(0.0); 
    }
    
    @Override
    public void initDefaultCommand()
    { 
    
        
    }
}
    
